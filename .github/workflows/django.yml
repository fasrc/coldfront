name: Coldfront CI

on:
  push:
    branches: [ "cp_ci_cd", "development" ]
  pull_request:
    branches: [ "cp_ci_cd", "development" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    # - name: Format with black
    #   run: |
    #     pip install black
    #     # format the files with black
    #     black .
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Sort imports
      run: |
        pip install isort
        # stop the build if there are Python syntax errors or undefined names
        isort .
        isort --check --diff .
    # - name: Build the images and start the containers
    #   run: |
    #     export GITHUB_WORKFLOW=True
    #     export MODE="Test"
    #     docker-compose -f docker-compose.yml build
    #     docker-compose -f docker-compose.yml up -d
    #     # run: docker-compose up -d --build
    # - name: Stop containers
    #   if: always()
    #   run: docker-compose -f "docker-compose.yml" down
    - name: Run Tests
      run: |
        python manage.py test
